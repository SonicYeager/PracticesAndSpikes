// <auto-generated />
using System;
using HotChocolatePoC.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotChocolatePoC.Database.Migrations
{
    [DbContext(typeof(ArticlesDbContext))]
    partial class ArticlesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HotChocolatePoC.Database.Entities.ArticleCommentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ArticleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleComments");
                });

            modelBuilder.Entity("HotChocolatePoC.Database.Entities.ArticleEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ArticleMatchcode")
                        .HasColumnType("longtext");

                    b.Property<string>("ArticleNumber")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ArticleNumberSupplier")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomsMatchcode")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomsTariffNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("CustomsTariffRate")
                        .HasColumnType("decimal(20,2)");

                    b.Property<string>("Ean")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("Eol")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("InnerBoxHeight")
                        .HasColumnType("double");

                    b.Property<double?>("InnerBoxLength")
                        .HasColumnType("double");

                    b.Property<double?>("InnerBoxWidth")
                        .HasColumnType("double");

                    b.Property<bool>("IsNew")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Kto")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Label1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Label2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Label3")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Label4")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("MinimumOrderQuantity")
                        .HasColumnType("int");

                    b.Property<double?>("OuterBoxHeight")
                        .HasColumnType("double");

                    b.Property<double?>("OuterBoxLength")
                        .HasColumnType("double");

                    b.Property<int?>("OuterBoxQuantity")
                        .HasColumnType("int");

                    b.Property<double?>("OuterBoxWidth")
                        .HasColumnType("double");

                    b.Property<string>("Packaging")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("PackagingUnit")
                        .HasColumnType("int");

                    b.Property<int?>("ProductionSiteId")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(20,2)");

                    b.Property<string>("ReorderNotice")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VariantId")
                        .HasColumnType("int");

                    b.Property<string>("VariantType")
                        .HasColumnType("longtext");

                    b.Property<string>("VariantValue")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("HotChocolatePoC.Database.Entities.ArticleSimilarityEntity", b =>
                {
                    b.Property<string>("ArticleId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SimilarArticleId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.HasKey("ArticleId", "SimilarArticleId");

                    b.HasIndex("SimilarArticleId");

                    b.ToTable("ArticleSimilarities");
                });

            modelBuilder.Entity("HotChocolatePoC.Database.Entities.ArticleSupplierPropertiesEntity", b =>
                {
                    b.Property<string>("ArticleId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("InnerBoxHeight")
                        .HasColumnType("double");

                    b.Property<double?>("InnerBoxLength")
                        .HasColumnType("double");

                    b.Property<double?>("InnerBoxWeight")
                        .HasColumnType("double");

                    b.Property<double?>("InnerBoxWidth")
                        .HasColumnType("double");

                    b.Property<double?>("InnerBoxWrappingBoardWeight")
                        .HasColumnType("double");

                    b.Property<double?>("InnerBoxWrappingPlasticWeight")
                        .HasColumnType("double");

                    b.Property<int?>("InnerBoxesPerOuterBox")
                        .HasColumnType("int");

                    b.Property<double?>("ItemWeight")
                        .HasColumnType("double");

                    b.Property<double?>("OuterBoxHeight")
                        .HasColumnType("double");

                    b.Property<double?>("OuterBoxLength")
                        .HasColumnType("double");

                    b.Property<double?>("OuterBoxWeight")
                        .HasColumnType("double");

                    b.Property<double?>("OuterBoxWidth")
                        .HasColumnType("double");

                    b.Property<double?>("OuterBoxWrappingBoardWeight")
                        .HasColumnType("double");

                    b.Property<double?>("OuterBoxWrappingPlasticWeight")
                        .HasColumnType("double");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.HasKey("ArticleId");

                    b.ToTable("ArticleSupplierProperties");
                });

            modelBuilder.Entity("HotChocolatePoC.Database.Entities.ImageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ArticleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("HotChocolatePoC.Database.Entities.SyncLogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("LastSyncedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("SyncLogs");
                });

            modelBuilder.Entity("HotChocolatePoC.Database.Entities.ArticleCommentEntity", b =>
                {
                    b.HasOne("HotChocolatePoC.Database.Entities.ArticleEntity", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("HotChocolatePoC.Database.Entities.ArticleSimilarityEntity", b =>
                {
                    b.HasOne("HotChocolatePoC.Database.Entities.ArticleEntity", "Article")
                        .WithMany("SimilarEntities")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotChocolatePoC.Database.Entities.ArticleEntity", "SimilarArticle")
                        .WithMany("SimilarReverseEntities")
                        .HasForeignKey("SimilarArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("SimilarArticle");
                });

            modelBuilder.Entity("HotChocolatePoC.Database.Entities.ArticleSupplierPropertiesEntity", b =>
                {
                    b.HasOne("HotChocolatePoC.Database.Entities.ArticleEntity", "Article")
                        .WithOne("SupplierProperties")
                        .HasForeignKey("HotChocolatePoC.Database.Entities.ArticleSupplierPropertiesEntity", "ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("HotChocolatePoC.Database.Entities.ImageEntity", b =>
                {
                    b.HasOne("HotChocolatePoC.Database.Entities.ArticleEntity", "Article")
                        .WithMany("Images")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("HotChocolatePoC.Database.Entities.ArticleEntity", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("SimilarEntities");

                    b.Navigation("SimilarReverseEntities");

                    b.Navigation("SupplierProperties");
                });
#pragma warning restore 612, 618
        }
    }
}
