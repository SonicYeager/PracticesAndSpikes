// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyGarage.Api.Persistence;

#nullable disable

namespace MyGarage.Api.Migrations
{
    [DbContext(typeof(MyGarageDbContext))]
    [Migration("20240820190713_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MyGarage.Api.Application.Types.FuelStop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountInLiters")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Note")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.Property<decimal>("OdometerInKilometers")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalPriceInEuro")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("FuelStops", (string)null);
                });

            modelBuilder.Entity("MyGarage.Api.Application.Types.Garage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Garages", (string)null);
                });

            modelBuilder.Entity("MyGarage.Api.Application.Types.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("FirstRegistration")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("FuelCapacity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("GarageId")
                        .HasColumnType("int");

                    b.Property<string>("LicensePlate")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("Odometer")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PriceAtPurchase")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("GarageId");

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("MyGarage.Api.Application.Types.FuelStop", b =>
                {
                    b.HasOne("MyGarage.Api.Application.Types.Vehicle", null)
                        .WithMany("FuelStops")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyGarage.Api.Application.Types.Vehicle", b =>
                {
                    b.HasOne("MyGarage.Api.Application.Types.Garage", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("GarageId");
                });

            modelBuilder.Entity("MyGarage.Api.Application.Types.Garage", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("MyGarage.Api.Application.Types.Vehicle", b =>
                {
                    b.Navigation("FuelStops");
                });
#pragma warning restore 612, 618
        }
    }
}
